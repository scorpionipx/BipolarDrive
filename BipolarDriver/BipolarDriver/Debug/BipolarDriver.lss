
BipolarDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000032c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002e  00800060  0000032c  000003a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003ce  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000400  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  0000043c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000160b  00000000  00000000  00000504  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000090e  00000000  00000000  00001b0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009d6  00000000  00000000  0000241d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000014c  00000000  00000000  00002df4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000513  00000000  00000000  00002f40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ab5  00000000  00000000  00003453  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00003f08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 aa 00 	jmp	0x154	; 0x154 <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e2       	ldi	r30, 0x2C	; 44
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 38       	cpi	r26, 0x8E	; 142
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae e8       	ldi	r26, 0x8E	; 142
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 38       	cpi	r26, 0x8E	; 142
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 7f 01 	call	0x2fe	; 0x2fe <main>
  8a:	0c 94 94 01 	jmp	0x328	; 0x328 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <init_bipolar_control>:
#include <util/delay.h>


void init_bipolar_control(void)
{
	MOTOR_DDR |= (1 << MOTOR_COIL_A_POSITIVE) | (1 << MOTOR_COIL_A_NEGATIVE) | (1 << MOTOR_COIL_B_POSITIVE) | (1 << MOTOR_COIL_B_NEGATIVE);
  92:	87 b3       	in	r24, 0x17	; 23
  94:	8f 60       	ori	r24, 0x0F	; 15
  96:	87 bb       	out	0x17, r24	; 23
	MOTOR_PORT &= ~((1 << MOTOR_COIL_A_POSITIVE) | (1 << MOTOR_COIL_A_NEGATIVE) | (1 << MOTOR_COIL_B_POSITIVE) | (1 << MOTOR_COIL_B_NEGATIVE));
  98:	88 b3       	in	r24, 0x18	; 24
  9a:	80 7f       	andi	r24, 0xF0	; 240
  9c:	88 bb       	out	0x18, r24	; 24
  9e:	08 95       	ret

000000a0 <bipolar_drive_forward>:
void bipolar_drive_forward()
{
	unsigned int STEP_DELAY_MS = 20;
	unsigned int TURN_OFF_DELAY_Ms = 10;
	
	MOTOR_STEP_1;
  a0:	88 b3       	in	r24, 0x18	; 24
  a2:	81 7f       	andi	r24, 0xF1	; 241
  a4:	88 bb       	out	0x18, r24	; 24
  a6:	c0 9a       	sbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a8:	8f e3       	ldi	r24, 0x3F	; 63
  aa:	9c e9       	ldi	r25, 0x9C	; 156
  ac:	01 97       	sbiw	r24, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <bipolar_drive_forward+0xc>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <bipolar_drive_forward+0x12>
  b2:	00 00       	nop
	_delay_ms(TURN_OFF_DELAY_Ms);
	MOTOR_OFF;
  b4:	88 b3       	in	r24, 0x18	; 24
  b6:	80 7f       	andi	r24, 0xF0	; 240
  b8:	88 bb       	out	0x18, r24	; 24
  ba:	8f e3       	ldi	r24, 0x3F	; 63
  bc:	9c e9       	ldi	r25, 0x9C	; 156
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <bipolar_drive_forward+0x1e>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <bipolar_drive_forward+0x24>
  c4:	00 00       	nop
	_delay_ms(STEP_DELAY_MS - TURN_OFF_DELAY_Ms);
	
	MOTOR_STEP_2;
  c6:	88 b3       	in	r24, 0x18	; 24
  c8:	84 7f       	andi	r24, 0xF4	; 244
  ca:	88 bb       	out	0x18, r24	; 24
  cc:	c2 9a       	sbi	0x18, 2	; 24
  ce:	8f e3       	ldi	r24, 0x3F	; 63
  d0:	9c e9       	ldi	r25, 0x9C	; 156
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <bipolar_drive_forward+0x32>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <bipolar_drive_forward+0x38>
  d8:	00 00       	nop
	_delay_ms(TURN_OFF_DELAY_Ms);
	MOTOR_OFF;
  da:	88 b3       	in	r24, 0x18	; 24
  dc:	80 7f       	andi	r24, 0xF0	; 240
  de:	88 bb       	out	0x18, r24	; 24
  e0:	8f e3       	ldi	r24, 0x3F	; 63
  e2:	9c e9       	ldi	r25, 0x9C	; 156
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <bipolar_drive_forward+0x44>
  e8:	00 c0       	rjmp	.+0      	; 0xea <bipolar_drive_forward+0x4a>
  ea:	00 00       	nop
	_delay_ms(STEP_DELAY_MS - TURN_OFF_DELAY_Ms);
	
	MOTOR_STEP_3;
  ec:	88 b3       	in	r24, 0x18	; 24
  ee:	82 7f       	andi	r24, 0xF2	; 242
  f0:	88 bb       	out	0x18, r24	; 24
  f2:	c1 9a       	sbi	0x18, 1	; 24
  f4:	8f e3       	ldi	r24, 0x3F	; 63
  f6:	9c e9       	ldi	r25, 0x9C	; 156
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <bipolar_drive_forward+0x58>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <bipolar_drive_forward+0x5e>
  fe:	00 00       	nop
	_delay_ms(TURN_OFF_DELAY_Ms);
	MOTOR_OFF;
 100:	88 b3       	in	r24, 0x18	; 24
 102:	80 7f       	andi	r24, 0xF0	; 240
 104:	88 bb       	out	0x18, r24	; 24
 106:	8f e3       	ldi	r24, 0x3F	; 63
 108:	9c e9       	ldi	r25, 0x9C	; 156
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <bipolar_drive_forward+0x6a>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <bipolar_drive_forward+0x70>
 110:	00 00       	nop
	_delay_ms(STEP_DELAY_MS - TURN_OFF_DELAY_Ms);
	
	MOTOR_STEP_4;
 112:	88 b3       	in	r24, 0x18	; 24
 114:	88 7f       	andi	r24, 0xF8	; 248
 116:	88 bb       	out	0x18, r24	; 24
 118:	c3 9a       	sbi	0x18, 3	; 24
 11a:	8f e3       	ldi	r24, 0x3F	; 63
 11c:	9c e9       	ldi	r25, 0x9C	; 156
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <bipolar_drive_forward+0x7e>
 122:	00 c0       	rjmp	.+0      	; 0x124 <bipolar_drive_forward+0x84>
 124:	00 00       	nop
	_delay_ms(TURN_OFF_DELAY_Ms);
	MOTOR_OFF;
 126:	88 b3       	in	r24, 0x18	; 24
 128:	80 7f       	andi	r24, 0xF0	; 240
 12a:	88 bb       	out	0x18, r24	; 24
 12c:	8f e3       	ldi	r24, 0x3F	; 63
 12e:	9c e9       	ldi	r25, 0x9C	; 156
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <bipolar_drive_forward+0x90>
 134:	00 c0       	rjmp	.+0      	; 0x136 <bipolar_drive_forward+0x96>
 136:	00 00       	nop
 138:	08 95       	ret

0000013a <init_interrupt_200ms>:

// 200 ms timer
void init_interrupt_200ms()
{
	// set up timer with prescaler = 64 and CTC mode
	TCCR1B |= (1 << WGM12)|(1 << CS11)|(1 << CS10);
 13a:	8e b5       	in	r24, 0x2e	; 46
 13c:	8b 60       	ori	r24, 0x0B	; 11
 13e:	8e bd       	out	0x2e, r24	; 46
	
	// initialize counter
	TCNT1 = 0;
 140:	1d bc       	out	0x2d, r1	; 45
 142:	1c bc       	out	0x2c, r1	; 44
	
	// initialize compare value
	OCR1A = 49999;
 144:	8f e4       	ldi	r24, 0x4F	; 79
 146:	93 ec       	ldi	r25, 0xC3	; 195
 148:	9b bd       	out	0x2b, r25	; 43
 14a:	8a bd       	out	0x2a, r24	; 42
	
	// enable compare interrupt
	TIMSK |= (1 << OCIE1A);
 14c:	89 b7       	in	r24, 0x39	; 57
 14e:	80 61       	ori	r24, 0x10	; 16
 150:	89 bf       	out	0x39, r24	; 57
 152:	08 95       	ret

00000154 <__vector_7>:
}

// 200ms ISR
ISR (TIMER1_COMPA_vect)
{
 154:	1f 92       	push	r1
 156:	0f 92       	push	r0
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	0f 92       	push	r0
 15c:	11 24       	eor	r1, r1
}
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <put_Char_LCD_Display>:
void display_initializing_message()
{
	put_Char_LCD_Display(0x01,0);
	
	put_Char_LCD_Display(0x80, 0);
	put_string("Initializing...");
 168:	25 b3       	in	r18, 0x15	; 21
 16a:	2f 70       	andi	r18, 0x0F	; 15
 16c:	38 2f       	mov	r19, r24
 16e:	30 7f       	andi	r19, 0xF0	; 240
 170:	23 2b       	or	r18, r19
 172:	25 bb       	out	0x15, r18	; 21
 174:	25 b3       	in	r18, 0x15	; 21
 176:	61 70       	andi	r22, 0x01	; 1
 178:	2e 7f       	andi	r18, 0xFE	; 254
 17a:	26 2b       	or	r18, r22
 17c:	25 bb       	out	0x15, r18	; 21
 17e:	a9 9a       	sbi	0x15, 1	; 21
 180:	ef ed       	ldi	r30, 0xDF	; 223
 182:	fe e2       	ldi	r31, 0x2E	; 46
 184:	31 97       	sbiw	r30, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <put_Char_LCD_Display+0x1c>
 188:	00 c0       	rjmp	.+0      	; 0x18a <put_Char_LCD_Display+0x22>
 18a:	00 00       	nop
 18c:	25 b3       	in	r18, 0x15	; 21
 18e:	2c 7f       	andi	r18, 0xFC	; 252
 190:	25 bb       	out	0x15, r18	; 21
 192:	25 b3       	in	r18, 0x15	; 21
 194:	2f 70       	andi	r18, 0x0F	; 15
 196:	82 95       	swap	r24
 198:	92 95       	swap	r25
 19a:	90 7f       	andi	r25, 0xF0	; 240
 19c:	98 27       	eor	r25, r24
 19e:	80 7f       	andi	r24, 0xF0	; 240
 1a0:	98 27       	eor	r25, r24
 1a2:	82 2b       	or	r24, r18
 1a4:	85 bb       	out	0x15, r24	; 21
 1a6:	85 b3       	in	r24, 0x15	; 21
 1a8:	8e 7f       	andi	r24, 0xFE	; 254
 1aa:	68 2b       	or	r22, r24
 1ac:	65 bb       	out	0x15, r22	; 21
 1ae:	a9 9a       	sbi	0x15, 1	; 21
 1b0:	8f ed       	ldi	r24, 0xDF	; 223
 1b2:	9e e2       	ldi	r25, 0x2E	; 46
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <put_Char_LCD_Display+0x4c>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <put_Char_LCD_Display+0x52>
 1ba:	00 00       	nop
 1bc:	85 b3       	in	r24, 0x15	; 21
 1be:	8c 7f       	andi	r24, 0xFC	; 252
 1c0:	85 bb       	out	0x15, r24	; 21
 1c2:	08 95       	ret

000001c4 <init_LCD_Display>:
 1c4:	8f ef       	ldi	r24, 0xFF	; 255
 1c6:	84 bb       	out	0x14, r24	; 20
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	70 e0       	ldi	r23, 0x00	; 0
 1cc:	83 e0       	ldi	r24, 0x03	; 3
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 1d4:	8f ef       	ldi	r24, 0xFF	; 255
 1d6:	9c e7       	ldi	r25, 0x7C	; 124
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <init_LCD_Display+0x14>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <init_LCD_Display+0x1a>
 1de:	00 00       	nop
 1e0:	60 e0       	ldi	r22, 0x00	; 0
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	83 e0       	ldi	r24, 0x03	; 3
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 1ec:	8f ef       	ldi	r24, 0xFF	; 255
 1ee:	9c e7       	ldi	r25, 0x7C	; 124
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <init_LCD_Display+0x2c>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <init_LCD_Display+0x32>
 1f6:	00 00       	nop
 1f8:	60 e0       	ldi	r22, 0x00	; 0
 1fa:	70 e0       	ldi	r23, 0x00	; 0
 1fc:	83 e0       	ldi	r24, 0x03	; 3
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 204:	8f ef       	ldi	r24, 0xFF	; 255
 206:	9c e7       	ldi	r25, 0x7C	; 124
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <init_LCD_Display+0x44>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <init_LCD_Display+0x4a>
 20e:	00 00       	nop
 210:	60 e0       	ldi	r22, 0x00	; 0
 212:	70 e0       	ldi	r23, 0x00	; 0
 214:	82 e0       	ldi	r24, 0x02	; 2
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 21c:	8f ef       	ldi	r24, 0xFF	; 255
 21e:	9c e7       	ldi	r25, 0x7C	; 124
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <init_LCD_Display+0x5c>
 224:	00 c0       	rjmp	.+0      	; 0x226 <init_LCD_Display+0x62>
 226:	00 00       	nop
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	70 e0       	ldi	r23, 0x00	; 0
 22c:	8c e0       	ldi	r24, 0x0C	; 12
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 234:	8f ef       	ldi	r24, 0xFF	; 255
 236:	9c e7       	ldi	r25, 0x7C	; 124
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <init_LCD_Display+0x74>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <init_LCD_Display+0x7a>
 23e:	00 00       	nop
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 24c:	8f ef       	ldi	r24, 0xFF	; 255
 24e:	9c e7       	ldi	r25, 0x7C	; 124
 250:	01 97       	sbiw	r24, 0x01	; 1
 252:	f1 f7       	brne	.-4      	; 0x250 <init_LCD_Display+0x8c>
 254:	00 c0       	rjmp	.+0      	; 0x256 <init_LCD_Display+0x92>
 256:	00 00       	nop
 258:	60 e0       	ldi	r22, 0x00	; 0
 25a:	70 e0       	ldi	r23, 0x00	; 0
 25c:	80 e8       	ldi	r24, 0x80	; 128
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 264:	8f ef       	ldi	r24, 0xFF	; 255
 266:	9c e7       	ldi	r25, 0x7C	; 124
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <init_LCD_Display+0xa4>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <init_LCD_Display+0xaa>
 26e:	00 00       	nop
 270:	60 e0       	ldi	r22, 0x00	; 0
 272:	70 e0       	ldi	r23, 0x00	; 0
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 27c:	08 95       	ret

0000027e <put_string>:
 27e:	ef 92       	push	r14
 280:	ff 92       	push	r15
 282:	0f 93       	push	r16
 284:	1f 93       	push	r17
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	8c 01       	movw	r16, r24
 28c:	7c 01       	movw	r14, r24
 28e:	c0 e0       	ldi	r28, 0x00	; 0
 290:	d0 e0       	ldi	r29, 0x00	; 0
 292:	09 c0       	rjmp	.+18     	; 0x2a6 <put_string+0x28>
 294:	f7 01       	movw	r30, r14
 296:	81 91       	ld	r24, Z+
 298:	7f 01       	movw	r14, r30
 29a:	61 e0       	ldi	r22, 0x01	; 1
 29c:	70 e0       	ldi	r23, 0x00	; 0
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
 2a4:	21 96       	adiw	r28, 0x01	; 1
 2a6:	f8 01       	movw	r30, r16
 2a8:	01 90       	ld	r0, Z+
 2aa:	00 20       	and	r0, r0
 2ac:	e9 f7       	brne	.-6      	; 0x2a8 <put_string+0x2a>
 2ae:	31 97       	sbiw	r30, 0x01	; 1
 2b0:	e0 1b       	sub	r30, r16
 2b2:	f1 0b       	sbc	r31, r17
 2b4:	ce 17       	cp	r28, r30
 2b6:	df 07       	cpc	r29, r31
 2b8:	68 f3       	brcs	.-38     	; 0x294 <put_string+0x16>
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	ff 90       	pop	r15
 2c4:	ef 90       	pop	r14
 2c6:	08 95       	ret

000002c8 <display_application_title>:
}

void display_application_title()
{
	put_Char_LCD_Display(0x01, 0);
 2c8:	60 e0       	ldi	r22, 0x00	; 0
 2ca:	70 e0       	ldi	r23, 0x00	; 0
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
	put_Char_LCD_Display(0x80, 0);
 2d4:	60 e0       	ldi	r22, 0x00	; 0
 2d6:	70 e0       	ldi	r23, 0x00	; 0
 2d8:	80 e8       	ldi	r24, 0x80	; 128
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
	put_string("BIPOLAR DRIVER");
 2e0:	80 e7       	ldi	r24, 0x70	; 112
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	0e 94 3f 01 	call	0x27e	; 0x27e <put_string>
	put_Char_LCD_Display(0xC0, 0);
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	70 e0       	ldi	r23, 0x00	; 0
 2ec:	80 ec       	ldi	r24, 0xC0	; 192
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 b4 00 	call	0x168	; 0x168 <put_Char_LCD_Display>
	put_string("   SCORPIONIPX");
 2f4:	8f e7       	ldi	r24, 0x7F	; 127
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	0e 94 3f 01 	call	0x27e	; 0x27e <put_string>
 2fc:	08 95       	ret

000002fe <main>:
#include "IPX_Interrupt.h"
#include "IPX_BipolarDriver.h"

int main(void)
{
	init_LCD_Display();
 2fe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <init_LCD_Display>
	init_interrupt_200ms();
 302:	0e 94 9d 00 	call	0x13a	; 0x13a <init_interrupt_200ms>
	init_bipolar_control();
 306:	0e 94 49 00 	call	0x92	; 0x92 <init_bipolar_control>
	sei();
 30a:	78 94       	sei
 30c:	2f ef       	ldi	r18, 0xFF	; 255
 30e:	80 e7       	ldi	r24, 0x70	; 112
 310:	92 e0       	ldi	r25, 0x02	; 2
 312:	21 50       	subi	r18, 0x01	; 1
 314:	80 40       	sbci	r24, 0x00	; 0
 316:	90 40       	sbci	r25, 0x00	; 0
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0x14>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0x1e>
 31c:	00 00       	nop
	
	_delay_ms(50);
	
	display_application_title();
 31e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <display_application_title>
	
    while (1) 
    {
		bipolar_drive_forward();
 322:	0e 94 50 00 	call	0xa0	; 0xa0 <bipolar_drive_forward>
 326:	fd cf       	rjmp	.-6      	; 0x322 <main+0x24>

00000328 <_exit>:
 328:	f8 94       	cli

0000032a <__stop_program>:
 32a:	ff cf       	rjmp	.-2      	; 0x32a <__stop_program>
